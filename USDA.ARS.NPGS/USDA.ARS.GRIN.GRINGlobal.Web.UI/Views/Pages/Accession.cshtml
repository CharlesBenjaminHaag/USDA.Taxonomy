@{
    ViewData["Title"] = "Home Page";
    Layout = "_LayoutUSWDSAdminInterior";
}

<!-- Google Charts Loader -->
<script src="https://www.gstatic.com/charts/loader.js"></script>

<style>
    html, body {
        height: 100%;
        margin: 0;
    }

    #treemap {
        width: 100%;
        height: 600px;
    }
</style>

<div class="grid-container">
    <div class="grid-row">
        <div class="grid-col-6">
            <div class="usa-card">
                <div class="usa-card__container">
                    <div class="usa-card__header">
                        <h3 class="usa-card__heading">By Repository</h3>
                    </div>
                    <div class="usa-card__body">
                        <div id="treemap" style="width: 100%; height: 600px;"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="grid-col-6">
            <div class="usa-card">
                <div class="usa-card__container">
                    <div class="usa-card__header">
                        <h3 class="usa-card__heading">By Location</h3>
                    </div>
                    <div class="usa-card__body">
                        <div id="treemap" style="width: 100%; height: 600px;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    
</div>

<script>
    // Load the Google Charts library
    google.charts.load('current', { packages: ['treemap'] });

    // After it's loaded, fetch data and draw chart
    google.charts.setOnLoadCallback(drawTreemap);

    function drawTreemap() {
        fetch('https://npgstest.ars-grin.gov/NPGS/api/v1/accession/report?criteria=2100')
            .then(response => response.json())
            .then(data => {
                // Google requires a specific format: [ ['ID', 'Parent', 'Value'] ]
                const treeData = [
                    ['Label', 'Parent', 'Value']
                ];

                treeData.push(['Root', null, 0]); // root node

                data.forEach(item => {
                    const label = item.title_field;
                    const value = parseInt(item.total_field.replace(/,/g, ''));
                    treeData.push([label, 'Root', value]);
                });

                const dataTable = google.visualization.arrayToDataTable(treeData);

                const chart = new google.visualization.TreeMap(document.getElementById('treemap'));

                chart.draw(dataTable, {
                    minColor: '#e0f2f1',
                    midColor: '#80cbc4',
                    maxColor: '#00695c',
                    headerHeight: 20,
                    fontColor: 'black',
                    showScale: true
                });
            })
            .catch(err => console.error('Google Chart error:', err));
    }
</script>